// Debug: function declaration command Sys.init Count: 5
// Debug: Push contant 4000, Count: 12 
// Debug: Pop pointer 0, Count: 19 
// Debug: Push contant 5000, Count: 26 
// Debug: Pop pointer 1, Count: 33 
// Debug:call command for function Sys.init Count: 83
// Debug: Pop temp 1, Count: 100 
// Debug: Label LOOP Count: 101
// Debug: goto command LOOP Count: 103
// Debug: function declaration command Sys.main Count: 139
// Debug: Push contant 4001, Count: 146 
// Debug: Pop pointer 0, Count: 153 
// Debug: Push contant 5001, Count: 160 
// Debug: Pop pointer 1, Count: 167 
// Debug: Push contant 200, Count: 174 
// Debug: Pop local 1, Count: 188 
// Debug: Push contant 40, Count: 195 
// Debug: Pop local 2, Count: 209 
// Debug: Push contant 6, Count: 216 
// Debug: Pop local 3, Count: 230 
// Debug: Push contant 123, Count: 237 
// Debug:call command for function Sys.main Count: 287
// Debug: Pop temp 0, Count: 304 
// Debug: Push local 0, Count: 318 
// Debug: Push local 1, Count: 332 
// Debug: Push local 2, Count: 346 
// Debug: Push local 3, Count: 360 
// Debug: Push local 4, Count: 374 
// Debug: Add command, Count: 385  
// Debug: Add command, Count: 396  
// Debug: Add command, Count: 407  
// Debug: Add command, Count: 418  
// Debug:return command for function Sys.main Count: 474
// Debug: function declaration command Sys.add12 Count: 475
// Debug: Push contant 4002, Count: 482 
// Debug: Pop pointer 0, Count: 489 
// Debug: Push contant 5002, Count: 496 
// Debug: Pop pointer 1, Count: 503 
// Debug: Push Argument 0, Count: 517 
// Debug: Push contant 12, Count: 524 
// Debug: Add command, Count: 535  
// Debug:return command for function Sys.add12 Count: 591

//  Remove Stack pointer initialization since the test script does it for you
// @256 
// D=A 
// @SP 
// M=D

(Sys.init) 
@4000 
D=A 
@SP 
A=M 
M=D 
@SP 
M=M+1 
@SP 
M=M-1 
@SP 
A=M 
D=M 
@THIS 
M=D 
@5000 
D=A 
@SP 
A=M 
M=D 
@SP 
M=M+1 
@SP 
M=M-1 
@SP 
A=M 
D=M 
@THAT 
M=D 
@retAddrSys.init 
D=A 
@SP 
A=M 
M=D 
@SP 
M=M+1 
@LCL 
D=M 
@SP 
A=M 
M=D 
@SP 
M=M+1 
@ARG 
D=M 
@SP 
A=M 
M=D 
@SP 
M=M+1 
@THIS 
D=M 
@SP 
A=M 
M=D 
@SP 
M=M+1 
@THAT 
D=M 
@SP 
A=M 
M=D 
@SP 
M=M+1 
@SP 
D=M 
@5 
D=D-A 
@0 
D=D-A 
@ARG 
M=D 
@SP 
D=M 
@LCL 
M=D 
@Sys.main 
0;JMP 
(retAddrSys.init) 
@5 
D=A 
//M=D 
// //  Temp initialization should be removed, as it is initialized by the test script
@1 
D=D+A 
// @5 
// D=M+D 
@addr 
M=D 
@SP 
M=M-1 
@SP 
A=M 
D=M 
@addr 
A=M 
M=D 
(LOOP) 
@LOOP 
0;JMP 
(Sys.main) 
@0 
D=A 
@SP 
A=M 
M=D 
@SP 
M=M+1 
@0 
D=A 
@SP 
A=M 
M=D 
@SP 
M=M+1 
@0 
D=A 
@SP 
A=M 
M=D 
@SP 
M=M+1 
@0 
D=A 
@SP 
A=M 
M=D 
@SP 
M=M+1 
@0 
D=A 
@SP 
A=M 
M=D 
@SP 
M=M+1 
@4001 
D=A 
@SP 
A=M 
M=D 
@SP 
M=M+1 
@SP 
M=M-1 
@SP 
A=M 
D=M 
@THIS 
M=D 
@5001 
D=A 
@SP 
A=M 
M=D 
@SP 
M=M+1 
@SP 
M=M-1 
@SP 
A=M 
D=M 
@THAT 
M=D 
@200 
D=A 
@SP 
A=M 
M=D 
@SP 
M=M+1 
@1 
D=A 
@LCL 
D=M+D 
@addr 
M=D 
@SP 
M=M-1 
@SP 
A=M 
D=M 
@addr 
A=M 
M=D 
@40 
D=A 
@SP 
A=M 
M=D 
@SP 
M=M+1 
@2 
D=A 
@LCL 
D=M+D 
@addr 
M=D 
@SP 
M=M-1 
@SP 
A=M 
D=M 
@addr 
A=M 
M=D 
@6 
D=A 
@SP 
A=M 
M=D 
@SP 
M=M+1 
@3 
D=A 
@LCL 
D=M+D 
@addr 
M=D 
@SP 
M=M-1 
@SP 
A=M 
D=M 
@addr 
A=M 
M=D 
@123 
D=A 
@SP 
A=M 
M=D 
@SP 
M=M+1 
@retAddrSys.main 
D=A 
@SP 
A=M 
M=D 
@SP 
M=M+1 
@LCL 
D=M 
@SP 
A=M 
M=D 
@SP 
M=M+1 
@ARG 
D=M 
@SP 
A=M 
M=D 
@SP 
M=M+1 
@THIS 
D=M 
@SP 
A=M 
M=D 
@SP 
M=M+1 
@THAT 
D=M 
@SP 
A=M 
M=D 
@SP 
M=M+1 
@SP 
D=M 
@5 
D=D-A 
@1 
D=D-A 
@ARG 
M=D 
@SP 
D=M 
@LCL 
M=D 
@Sys.add12 
0;JMP 
(retAddrSys.main) 
@5 
D=A 
M=D 
@0 
D=A 
@5 
D=M+D 
@addr 
M=D 
@SP 
M=M-1 
@SP 
A=M 
D=M 
@addr 
A=M 
M=D 
@0 
D=A 
@pushlocal 
M=D 
@LCL 
D=M+D 
@addr 
A=D 
D=M 
@SP 
A=M 
M=D 
@SP 
M=M+1 
@1 
D=A 
@pushlocal 
M=D 
@LCL 
D=M+D 
@addr 
A=D 
D=M 
@SP 
A=M 
M=D 
@SP 
M=M+1 
@2 
D=A 
@pushlocal 
M=D 
@LCL 
D=M+D 
@addr 
A=D 
D=M 
@SP 
A=M 
M=D 
@SP 
M=M+1 
@3 
D=A 
@pushlocal 
M=D 
@LCL 
D=M+D 
@addr 
A=D 
D=M 
@SP 
A=M 
M=D 
@SP 
M=M+1 
@4 
D=A 
@pushlocal 
M=D 
@LCL 
D=M+D 
@addr 
A=D 
D=M 
@SP 
A=M 
M=D 
@SP 
M=M+1 
@SP 
M=M-1 
@SP 
A=M 
D=M 
@SP 
M=M-1 
A=M 
M=M+D 
@SP 
M=M+1 
@SP 
M=M-1 
@SP 
A=M 
D=M 
@SP 
M=M-1 
A=M 
M=M+D 
@SP 
M=M+1 
@SP 
M=M-1 
@SP 
A=M 
D=M 
@SP 
M=M-1 
A=M 
M=M+D 
@SP 
M=M+1 
@SP 
M=M-1 
@SP 
A=M 
D=M 
@SP 
M=M-1 
A=M 
M=M+D 
@SP 
M=M+1 
@LCL 
D=M 
@endFrameSys.main 
M=D 
@5 
D=A 
@endFrameSys.main 
A=M-D 
D=M 
@retAddrSys.main 
M=D 
@SP 
M=M-1 
@SP 
A=M 
D=M 
@ARG 
A=M 
M=D 
@1 
D=A 
@ARG 
D=M+D 
@SP 
M=D 
@1 
D=A 
@endFrameSys.main 
A=M-D 
D=M 
@THAT 
M=D 
@2 
D=A 
@endFrameSys.main 
A=M-D 
D=M 
@THIS 
M=D 
@3 
D=A 
@endFrameSys.main 
A=M-D 
D=M 
@ARG 
M=D 
@4 
D=A 
@endFrameSys.main 
A=M-D 
D=M 
@LCL 
M=D 
@retAddrSys.main 
A=M 
0;JMP 
(Sys.add12) 
@4002 
D=A 
@SP 
A=M 
M=D 
@SP 
M=M+1 
@SP 
M=M-1 
@SP 
A=M 
D=M 
@THIS 
M=D 
@5002 
D=A 
@SP 
A=M 
M=D 
@SP 
M=M+1 
@SP 
M=M-1 
@SP 
A=M 
D=M 
@THAT 
M=D 
@0 
D=A 
@pusharg 
M=D 
@ARG 
D=M+D 
@addr 
A=D 
D=M 
@SP 
A=M 
M=D 
@SP 
M=M+1 
@12 
D=A 
@SP 
A=M 
M=D 
@SP 
M=M+1 
@SP 
M=M-1 
@SP 
A=M 
D=M 
@SP 
M=M-1 
A=M 
M=M+D 
@SP 
M=M+1 
@LCL 
D=M 
@endFrameSys.add12 
M=D 
@5 
D=A 
@endFrameSys.add12 
A=M-D 
D=M 
@retAddrSys.add12 
M=D 
@SP 
M=M-1 
@SP 
A=M 
D=M 
@ARG 
A=M 
M=D 
@1 
D=A 
@ARG 
D=M+D 
@SP 
M=D 
@1 
D=A 
@endFrameSys.add12 
A=M-D 
D=M 
@THAT 
M=D 
@2 
D=A 
@endFrameSys.add12 
A=M-D 
D=M 
@THIS 
M=D 
@3 
D=A 
@endFrameSys.add12 
A=M-D 
D=M 
@ARG 
M=D 
@4 
D=A 
@endFrameSys.add12 
A=M-D 
D=M 
@LCL 
M=D 
@retAddrSys.add12 
A=M 
0;JMP