// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux4Way(in=load, sel=address[12..13], a=ram0ld, b=ram1ld, c=ram2ld, d=ram3ld);// RAM4k Selector
    RAM4K(in=in, load=ram0ld, address=address[0..11], out=ram0Out); // RAM 0
    RAM4K(in=in, load=ram1ld, address=address[0..11], out=ram1Out); // RAM 1
    RAM4K(in=in, load=ram2ld, address=address[0..11], out=ram2Out); // RAM 2
    RAM4K(in=in, load=ram3ld, address=address[0..11], out=ram3Out); // RAM 3
    Mux4Way16(a=ram0Out, b=ram1Out, c=ram2Out, d=ram3Out, sel=address[12..13], out=out); // Ouput selector
}