// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    // Put your code here:
    //  Load selection Logic
    DMux4Way(in=load, sel=address[0..1], a=Load0, b=Load1, c=Load2, d=Load3);
    
    //  Input Logic
    RAM4K(in=in, load=Load0, address=address[2..13], out=RAMOut0);     //  RAM 0
    RAM4K(in=in, load=Load1, address=address[2..13], out=RAMOut1);     //  RAM 1
    RAM4K(in=in, load=Load2, address=address[2..13], out=RAMOut2);     //  RAM 2
    RAM4K(in=in, load=Load3, address=address[2..13], out=RAMOut3);     //  RAM 3

    //  Output probing logic
    Mux4Way16(a=RAMOut0, b=RAMOut1, c=RAMOut2, d=RAMOut3, sel=address[0..1], out=out);


}